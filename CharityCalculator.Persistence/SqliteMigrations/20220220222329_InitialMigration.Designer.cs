// <auto-generated />
using System;
using CharityCalculator.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharityCalculator.Persistence.SqliteMigrations
{
    [DbContext(typeof(CharityCalculatorSqliteDbContext))]
    [Migration("20220220222329_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("CharityCalculator.Domain.Models.EventType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MaximumDonationAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SupplementInPercentage")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d3f91375-114d-4e73-84a4-f70691df7571"),
                            DateCreated = new DateTime(2022, 2, 21, 0, 23, 28, 598, DateTimeKind.Local).AddTicks(602),
                            LastModified = new DateTime(2022, 2, 21, 0, 23, 28, 598, DateTimeKind.Local).AddTicks(9700),
                            MaximumDonationAmount = 100000m,
                            Name = "Sports",
                            SupplementInPercentage = 5m
                        },
                        new
                        {
                            Id = new Guid("6b651a9e-4c9a-41c1-915e-b5d913939d52"),
                            DateCreated = new DateTime(2022, 2, 21, 0, 23, 28, 599, DateTimeKind.Local).AddTicks(4229),
                            LastModified = new DateTime(2022, 2, 21, 0, 23, 28, 599, DateTimeKind.Local).AddTicks(4237),
                            MaximumDonationAmount = 100000m,
                            Name = "Political",
                            SupplementInPercentage = 3m
                        },
                        new
                        {
                            Id = new Guid("24cbf6e1-d896-4ac6-92c9-29c32807a3dd"),
                            DateCreated = new DateTime(2022, 2, 21, 0, 23, 28, 599, DateTimeKind.Local).AddTicks(4249),
                            LastModified = new DateTime(2022, 2, 21, 0, 23, 28, 599, DateTimeKind.Local).AddTicks(4251),
                            MaximumDonationAmount = 100000m,
                            Name = "Other",
                            SupplementInPercentage = 0m
                        });
                });

            modelBuilder.Entity("CharityCalculator.Domain.Models.Rate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("RateInPercentage")
                        .HasColumnType("TEXT");

                    b.Property<int>("RateType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RateType")
                        .IsUnique();

                    b.ToTable("Rates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b588caa4-1c9d-4a79-b58a-b5a2b7ec0032"),
                            DateCreated = new DateTime(2022, 2, 21, 0, 23, 28, 611, DateTimeKind.Local).AddTicks(9606),
                            LastModified = new DateTime(2022, 2, 21, 0, 23, 28, 611, DateTimeKind.Local).AddTicks(9628),
                            RateInPercentage = 20m,
                            RateType = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
